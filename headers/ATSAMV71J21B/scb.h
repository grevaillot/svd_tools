#pragma once 

/* --- SCB: System Control Block ------------------------------------ */

/** @defgroup scb_registers System Control Block Register
@{*/

/** SCB_CPUID CPUID Base Register **/
#define SCB_CPUID			MMIO32(SCB_BASE + 0x00)
/** SCB_ICSR Interrupt Control and State Register **/
#define SCB_ICSR			MMIO32(SCB_BASE + 0x04)
/** SCB_VTOR Vector Table Offset Register **/
#define SCB_VTOR			MMIO32(SCB_BASE + 0x08)
/** SCB_AIRCR Application Interrupt and Reset Control Register **/
#define SCB_AIRCR			MMIO32(SCB_BASE + 0x0c)
/** SCB_SCR System Control Register **/
#define SCB_SCR			MMIO32(SCB_BASE + 0x10)
/** SCB_CCR Configuration and Control Register **/
#define SCB_CCR			MMIO32(SCB_BASE + 0x14)
/** SCB_SHPR1 System Handler Priority Register 1 **/
#define SCB_SHPR1			MMIO32(SCB_BASE + 0x18)
/** SCB_SHPR2 System Handler Priority Register 2 **/
#define SCB_SHPR2			MMIO32(SCB_BASE + 0x1c)
/** SCB_SHPR3 System Handler Priority Register 3 **/
#define SCB_SHPR3			MMIO32(SCB_BASE + 0x20)
/** SCB_SHCSR System Handler Control and State Register **/
#define SCB_SHCSR			MMIO32(SCB_BASE + 0x24)
/** SCB_CFSR Configurable Fault Status Registers **/
#define SCB_CFSR			MMIO32(SCB_BASE + 0x28)
/** SCB_HFSR HardFault Status register **/
#define SCB_HFSR			MMIO32(SCB_BASE + 0x2c)
/** SCB_DFSR Debug Fault Status Register **/
#define SCB_DFSR			MMIO32(SCB_BASE + 0x30)
/** SCB_MMFAR MemManage Fault Address Register **/
#define SCB_MMFAR			MMIO32(SCB_BASE + 0x34)
/** SCB_BFAR BusFault Address Register **/
#define SCB_BFAR			MMIO32(SCB_BASE + 0x38)
/** SCB_AFSR Auxiliary Fault Status Register **/
#define SCB_AFSR			MMIO32(SCB_BASE + 0x3c)
/** SCB_CLIDR Cache Level ID Register **/
#define SCB_CLIDR			MMIO32(SCB_BASE + 0x78)
/** SCB_CTR Cache Type Register **/
#define SCB_CTR			MMIO32(SCB_BASE + 0x7c)
/** SCB_CCSIDR Cache Size ID Register **/
#define SCB_CCSIDR			MMIO32(SCB_BASE + 0x80)
/** SCB_CSSELR Cache Size Selection Register **/
#define SCB_CSSELR			MMIO32(SCB_BASE + 0x84)
/** SCB_CPACR Coprocessor Access Control Register **/
#define SCB_CPACR			MMIO32(SCB_BASE + 0x88)
/** SCB_STIR Software Trigger Interrupt Register **/
#define SCB_STIR			MMIO32(SCB_BASE + 0x200)
/** SCB_MVFR0 Media and VFP Feature Register 0 **/
#define SCB_MVFR0			MMIO32(SCB_BASE + 0x240)
/** SCB_MVFR1 Media and VFP Feature Register 1 **/
#define SCB_MVFR1			MMIO32(SCB_BASE + 0x244)
/** SCB_MVFR2 Media and VFP Feature Register 2 **/
#define SCB_MVFR2			MMIO32(SCB_BASE + 0x248)

/**@}*/


/** @defgroup scb_cpuid CPUID CPUID Base Register
@{*/


#define SCB_CPUID_IMPLEMENTER_SHIFT		24
#define SCB_CPUID_IMPLEMENTER_MASK		0xff
/** @defgroup scb_cpuid_implementer IMPLEMENTER Implementer code
@{*/
/**@}*/


#define SCB_CPUID_VARIANT_SHIFT		20
#define SCB_CPUID_VARIANT_MASK		0x0f
/** @defgroup scb_cpuid_variant VARIANT Indicates processor revision: 0x2 = Revision 2
@{*/
/**@}*/


#define SCB_CPUID_ARCHITECTURE_SHIFT		16
#define SCB_CPUID_ARCHITECTURE_MASK		0x0f
/** @defgroup scb_cpuid_architecture ARCHITECTURE Indicates architecture. Reads as 0xF
@{*/
/**@}*/


#define SCB_CPUID_PARTNO_SHIFT		4
#define SCB_CPUID_PARTNO_MASK		0xfff
/** @defgroup scb_cpuid_partno PARTNO Indicates part number
@{*/
/**@}*/


#define SCB_CPUID_REVISION_SHIFT		0
#define SCB_CPUID_REVISION_MASK		0x0f
/** @defgroup scb_cpuid_revision REVISION Indicates patch release: 0x0 = Patch 0
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_icsr ICSR Interrupt Control and State Register
@{*/

/** SCB_ICSR_NMIPENDSET Makes the NMI exception active, or reads the state of the exception **/
#define SCB_ICSR_NMIPENDSET		(1 << 31)
/** SCB_ICSR_PENDSVSET Sets the PendSV exception as pending, or reads the current state of the exception **/
#define SCB_ICSR_PENDSVSET		(1 << 28)
/** SCB_ICSR_PENDSVCLR Removes the pending status of the PendSV exception **/
#define SCB_ICSR_PENDSVCLR		(1 << 27)
/** SCB_ICSR_PENDSTSET Sets the SysTick exception as pending, or reads the current state of the exception **/
#define SCB_ICSR_PENDSTSET		(1 << 26)
/** SCB_ICSR_PENDSTCLR Removes the pending status of the SysTick exception **/
#define SCB_ICSR_PENDSTCLR		(1 << 25)
/** SCB_ICSR_ISRPREEMPT Indicates whether a pending exception will be serviced on exit from debug halt state **/
#define SCB_ICSR_ISRPREEMPT		(1 << 23)
/** SCB_ICSR_ISRPENDING Is external interrupt, generated by the NVIC, pending **/
#define SCB_ICSR_ISRPENDING		(1 << 22)

#define SCB_ICSR_VECTPENDING_SHIFT		12
#define SCB_ICSR_VECTPENDING_MASK		0x3f
/** @defgroup scb_icsr_vectpending VECTPENDING Exception number of the highest priority pending enabled exception
@{*/
/**@}*/

/** SCB_ICSR_RETTOBASE Indicates whether there is an active exception other than the exception indicated by the current value of the IPSR **/
#define SCB_ICSR_RETTOBASE		(1 << 11)

#define SCB_ICSR_VECTACTIVE_SHIFT		0
#define SCB_ICSR_VECTACTIVE_MASK		0x1ff
/** @defgroup scb_icsr_vectactive VECTACTIVE Active exception number
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_vtor VTOR Vector Table Offset Register
@{*/


#define SCB_VTOR_TBLOFF_SHIFT		7
#define SCB_VTOR_TBLOFF_MASK		0x1ffffff
/** @defgroup scb_vtor_tbloff TBLOFF Bits[31:7] of the vector table address
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_aircr AIRCR Application Interrupt and Reset Control Register
@{*/


#define SCB_AIRCR_VECTKEY_SHIFT		16
#define SCB_AIRCR_VECTKEY_MASK		0xffff
/** @defgroup scb_aircr_vectkey VECTKEY Vector key
@{*/
/**@}*/

/** SCB_AIRCR_ENDIANNESS Memory system endianness **/
#define SCB_AIRCR_ENDIANNESS		(1 << 15)

#define SCB_AIRCR_PRIGROUP_SHIFT		8
#define SCB_AIRCR_PRIGROUP_MASK		0x07
/** @defgroup scb_aircr_prigroup PRIGROUP Interrupt priority grouping field. This field determines the split of group priority from subpriority.
@{*/
/**@}*/

/** SCB_AIRCR_SYSRESETREQ System Reset Request **/
#define SCB_AIRCR_SYSRESETREQ		(1 << 2)
/** SCB_AIRCR_VECTCLRACTIVE Clears all active state information for fixed and configurable exceptions **/
#define SCB_AIRCR_VECTCLRACTIVE		(1 << 1)
/** SCB_AIRCR_VECTRESET Writing 1 to this bit causes a local system reset **/
#define SCB_AIRCR_VECTRESET		(1 << 0)

/**@}*/

/** @defgroup scb_scr SCR System Control Register
@{*/

/** SCB_SCR_SEVONPEND Determines whether an interrupt transition from inactive state to pending state is a wakeup event **/
#define SCB_SCR_SEVONPEND		(1 << 4)
/** SCB_SCR_SLEEPDEEP Provides a qualifying hint indicating that waking from sleep might take longer **/
#define SCB_SCR_SLEEPDEEP		(1 << 2)
/** SCB_SCR_SLEEPONEXIT Determines whether, on an exit from an ISR that returns to the base level of execution priority, the processor enters a sleep state **/
#define SCB_SCR_SLEEPONEXIT		(1 << 1)

/**@}*/

/** @defgroup scb_ccr CCR Configuration and Control Register
@{*/

/** SCB_CCR_BP Branch prediction enable bi **/
#define SCB_CCR_BP		(1 << 18)
/** SCB_CCR_IC Instruction cache enable bi **/
#define SCB_CCR_IC		(1 << 17)
/** SCB_CCR_DC Cache enable bit **/
#define SCB_CCR_DC		(1 << 16)
/** SCB_CCR_STKALIGN Indicates stack alignment on exception entry **/
#define SCB_CCR_STKALIGN		(1 << 9)
/** SCB_CCR_BFHFNMIGN Enables handlers with priority -1 or -2 to ignore data BusFaults caused by load and store instructions. **/
#define SCB_CCR_BFHFNMIGN		(1 << 8)
/** SCB_CCR_DIV_0_TRP Enables faulting or halting when the processor executes an SDIV or UDIV instruction with a divisor of 0 **/
#define SCB_CCR_DIV_0_TRP		(1 << 4)
/** SCB_CCR_UNALIGN_TRP Enables unaligned access traps **/
#define SCB_CCR_UNALIGN_TRP		(1 << 3)
/** SCB_CCR_USERSETMPEND Enables unprivileged software access to the STIR **/
#define SCB_CCR_USERSETMPEND		(1 << 1)
/** SCB_CCR_NONBASETHRDENA Controls whether the processor can enter Thread mode with exceptions active **/
#define SCB_CCR_NONBASETHRDENA		(1 << 0)

/**@}*/

/** @defgroup scb_shpr1 SHPR1 System Handler Priority Register 1
@{*/


#define SCB_SHPR1_PRI_6_SHIFT		16
#define SCB_SHPR1_PRI_6_MASK		0xff
/** @defgroup scb_shpr1_pri_6 PRI6 Priority of system handler 6, UsageFault
@{*/
/**@}*/


#define SCB_SHPR1_PRI_5_SHIFT		8
#define SCB_SHPR1_PRI_5_MASK		0xff
/** @defgroup scb_shpr1_pri_5 PRI5 Priority of system handler 5, BusFault
@{*/
/**@}*/


#define SCB_SHPR1_PRI_4_SHIFT		0
#define SCB_SHPR1_PRI_4_MASK		0xff
/** @defgroup scb_shpr1_pri_4 PRI4 Priority of system handler 4, MemManage
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_shpr2 SHPR2 System Handler Priority Register 2
@{*/


#define SCB_SHPR2_PRI_11_SHIFT		24
#define SCB_SHPR2_PRI_11_MASK		0xff
/** @defgroup scb_shpr2_pri_11 PRI11 Priority of system handler 11, SVCall
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_shpr3 SHPR3 System Handler Priority Register 3
@{*/


#define SCB_SHPR3_PRI_15_SHIFT		24
#define SCB_SHPR3_PRI_15_MASK		0xff
/** @defgroup scb_shpr3_pri_15 PRI15 Priority of system handler 15, SysTick exception
@{*/
/**@}*/


#define SCB_SHPR3_PRI_14_SHIFT		16
#define SCB_SHPR3_PRI_14_MASK		0xff
/** @defgroup scb_shpr3_pri_14 PRI14 Priority of system handler 14, PendSV
@{*/
/**@}*/


#define SCB_SHPR3_PRI_12_SHIFT		0
#define SCB_SHPR3_PRI_12_MASK		0xff
/** @defgroup scb_shpr3_pri_12 PRI12 Priority of system handler 12, SysTick
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_shcsr SHCSR System Handler Control and State Register
@{*/

/** SCB_SHCSR_USGFAULTENA  **/
#define SCB_SHCSR_USGFAULTENA		(1 << 18)
/** SCB_SHCSR_BUSFAULTENA  **/
#define SCB_SHCSR_BUSFAULTENA		(1 << 17)
/** SCB_SHCSR_MEMFAULTENA  **/
#define SCB_SHCSR_MEMFAULTENA		(1 << 16)
/** SCB_SHCSR_SVCALLPENDED  **/
#define SCB_SHCSR_SVCALLPENDED		(1 << 15)
/** SCB_SHCSR_BUSFAULTPENDED  **/
#define SCB_SHCSR_BUSFAULTPENDED		(1 << 14)
/** SCB_SHCSR_MEMFAULTPENDED  **/
#define SCB_SHCSR_MEMFAULTPENDED		(1 << 13)
/** SCB_SHCSR_USGFAULTPENDED  **/
#define SCB_SHCSR_USGFAULTPENDED		(1 << 12)
/** SCB_SHCSR_SYSTICKACT  **/
#define SCB_SHCSR_SYSTICKACT		(1 << 11)
/** SCB_SHCSR_PENDSVACT  **/
#define SCB_SHCSR_PENDSVACT		(1 << 10)
/** SCB_SHCSR_MONITORACT  **/
#define SCB_SHCSR_MONITORACT		(1 << 8)
/** SCB_SHCSR_SVCALLACT  **/
#define SCB_SHCSR_SVCALLACT		(1 << 7)
/** SCB_SHCSR_USGFAULTACT  **/
#define SCB_SHCSR_USGFAULTACT		(1 << 3)
/** SCB_SHCSR_BUSFAULTACT  **/
#define SCB_SHCSR_BUSFAULTACT		(1 << 1)
/** SCB_SHCSR_MEMFAULTACT  **/
#define SCB_SHCSR_MEMFAULTACT		(1 << 0)

/**@}*/

/** @defgroup scb_cfsr CFSR Configurable Fault Status Registers
@{*/

/** SCB_CFSR_DIVBYZERO  **/
#define SCB_CFSR_DIVBYZERO		(1 << 25)
/** SCB_CFSR_UNALIGNED  **/
#define SCB_CFSR_UNALIGNED		(1 << 24)
/** SCB_CFSR_NOCP  **/
#define SCB_CFSR_NOCP		(1 << 19)
/** SCB_CFSR_INVPC  **/
#define SCB_CFSR_INVPC		(1 << 18)
/** SCB_CFSR_INVSTATE  **/
#define SCB_CFSR_INVSTATE		(1 << 17)
/** SCB_CFSR_UNDEFINSTR  **/
#define SCB_CFSR_UNDEFINSTR		(1 << 16)
/** SCB_CFSR_BFARVALID  **/
#define SCB_CFSR_BFARVALID		(1 << 15)
/** SCB_CFSR_LSPERR  **/
#define SCB_CFSR_LSPERR		(1 << 13)
/** SCB_CFSR_STKERR  **/
#define SCB_CFSR_STKERR		(1 << 12)
/** SCB_CFSR_UNSTKERR  **/
#define SCB_CFSR_UNSTKERR		(1 << 11)
/** SCB_CFSR_IMPRECISERR  **/
#define SCB_CFSR_IMPRECISERR		(1 << 10)
/** SCB_CFSR_PRECISERR  **/
#define SCB_CFSR_PRECISERR		(1 << 9)
/** SCB_CFSR_IBUSERR  **/
#define SCB_CFSR_IBUSERR		(1 << 8)
/** SCB_CFSR_MMARVALID  **/
#define SCB_CFSR_MMARVALID		(1 << 7)
/** SCB_CFSR_MLSPERR  **/
#define SCB_CFSR_MLSPERR		(1 << 5)
/** SCB_CFSR_MSTKERR  **/
#define SCB_CFSR_MSTKERR		(1 << 4)
/** SCB_CFSR_MUNSTKERR  **/
#define SCB_CFSR_MUNSTKERR		(1 << 3)
/** SCB_CFSR_DACCVIOL  **/
#define SCB_CFSR_DACCVIOL		(1 << 1)
/** SCB_CFSR_IACCVIOL  **/
#define SCB_CFSR_IACCVIOL		(1 << 0)

/**@}*/

/** @defgroup scb_hfsr HFSR HardFault Status register
@{*/

/** SCB_HFSR_DEBUGEVT Indicates when a Debug event has occurred **/
#define SCB_HFSR_DEBUGEVT		(1 << 31)
/** SCB_HFSR_FORCED Indicates that a fault with configurable priority has been escalated to a HardFault exception **/
#define SCB_HFSR_FORCED		(1 << 30)
/** SCB_HFSR_VECTTBL Indicates when a fault has occurred because of a vector table read error on exception processing **/
#define SCB_HFSR_VECTTBL		(1 << 1)

/**@}*/

/** @defgroup scb_dfsr DFSR Debug Fault Status Register
@{*/

/** SCB_DFSR_EXTERNAL debug event generated because of the assertion of an external debug request **/
#define SCB_DFSR_EXTERNAL		(1 << 4)
/** SCB_DFSR_VCATCH triggering of a Vector catch **/
#define SCB_DFSR_VCATCH		(1 << 3)
/** SCB_DFSR_DWTTRAP debug event generated by the DWT **/
#define SCB_DFSR_DWTTRAP		(1 << 2)
/** SCB_DFSR_BKPT debug event generated by BKPT instruction execution or a breakpoint match in FPB **/
#define SCB_DFSR_BKPT		(1 << 1)
/** SCB_DFSR_HALTED debug event generated by **/
#define SCB_DFSR_HALTED		(1 << 0)

/**@}*/

/** @defgroup scb_mmfar MMFAR MemManage Fault Address Register
@{*/


#define SCB_MMFAR_ADDRESS_SHIFT		0
#define SCB_MMFAR_ADDRESS_MASK		0xffffffff
/** @defgroup scb_mmfar_address ADDRESS Data address for an MPU fault
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_bfar BFAR BusFault Address Register
@{*/


#define SCB_BFAR_ADDRESS_SHIFT		0
#define SCB_BFAR_ADDRESS_MASK		0xffffffff
/** @defgroup scb_bfar_address ADDRESS Data address for a precise bus fault
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_afsr AFSR Auxiliary Fault Status Register
@{*/


/**@}*/

/** @defgroup scb_clidr CLIDR Cache Level ID Register
@{*/


#define SCB_CLIDR_LoU_SHIFT		27
#define SCB_CLIDR_LoU_MASK		0x07
/** @defgroup scb_clidr_lou LoU Level of Unification
@{*/
/**@}*/


#define SCB_CLIDR_LoC_SHIFT		24
#define SCB_CLIDR_LoC_MASK		0x07
/** @defgroup scb_clidr_loc LoC Level of Coherency
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_ctr CTR Cache Type Register
@{*/


#define SCB_CTR_FORMAT_SHIFT		29
#define SCB_CTR_FORMAT_MASK		0x07
/** @defgroup scb_ctr_format FORMAT Register format
@{*/
/**@}*/


#define SCB_CTR_CWG_SHIFT		24
#define SCB_CTR_CWG_MASK		0x0f
/** @defgroup scb_ctr_cwg CWG Cache Writeback Granule
@{*/
/**@}*/


#define SCB_CTR_ERG_SHIFT		20
#define SCB_CTR_ERG_MASK		0x0f
/** @defgroup scb_ctr_erg ERG Exclusives Reservation Granule
@{*/
/**@}*/


#define SCB_CTR_DMINLINE_SHIFT		16
#define SCB_CTR_DMINLINE_MASK		0x0f
/** @defgroup scb_ctr_dminline DMINLINE Smallest cache line of all the data and unified caches under the core control
@{*/
/**@}*/


#define SCB_CTR_IMINLINE_SHIFT		0
#define SCB_CTR_IMINLINE_MASK		0x0f
/** @defgroup scb_ctr_iminline IMINLINE Smallest cache line of all the instruction caches under the control of the processor
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_ccsidr CCSIDR Cache Size ID Register
@{*/

/** SCB_CCSIDR_WT Write-Through support **/
#define SCB_CCSIDR_WT		(1 << 31)
/** SCB_CCSIDR_WB Write-Back support **/
#define SCB_CCSIDR_WB		(1 << 30)
/** SCB_CCSIDR_RA Read allocation support **/
#define SCB_CCSIDR_RA		(1 << 29)
/** SCB_CCSIDR_WA Write allocation support **/
#define SCB_CCSIDR_WA		(1 << 28)

#define SCB_CCSIDR_NumSets_SHIFT		12
#define SCB_CCSIDR_NumSets_MASK		0xffff
/** @defgroup scb_ccsidr_numsets NumSets number of sets
@{*/
/**@}*/


#define SCB_CCSIDR_Associativity_SHIFT		3
#define SCB_CCSIDR_Associativity_MASK		0x1ff
/** @defgroup scb_ccsidr_associativity Associativity number of ways
@{*/
/**@}*/


#define SCB_CCSIDR_LineSize_SHIFT		0
#define SCB_CCSIDR_LineSize_MASK		0x07
/** @defgroup scb_ccsidr_linesize LineSize number of words in each cache line
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_csselr CSSELR Cache Size Selection Register
@{*/


#define SCB_CSSELR_LEVEL_SHIFT		1
#define SCB_CSSELR_LEVEL_MASK		0x07
/** @defgroup scb_csselr_level LEVEL cache level selected
@{*/
/**@}*/

/** SCB_CSSELR_IND selection of instruction or data cache **/
#define SCB_CSSELR_IND		(1 << 0)

/**@}*/

/** @defgroup scb_cpacr CPACR Coprocessor Access Control Register
@{*/


#define SCB_CPACR_CP11_SHIFT		22
#define SCB_CPACR_CP11_MASK		0x03
/** @defgroup scb_cpacr_cp11 CP11 Access privileges for coprocessor 11.
@{*/
/**@}*/


#define SCB_CPACR_CP10_SHIFT		20
#define SCB_CPACR_CP10_MASK		0x03
/** @defgroup scb_cpacr_cp10 CP10 Access privileges for coprocessor 10.
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_stir STIR Software Trigger Interrupt Register
@{*/


#define SCB_STIR_INTID_SHIFT		0
#define SCB_STIR_INTID_MASK		0x1ff
/** @defgroup scb_stir_intid INTID Interrupt ID of the interrupt to trigger, in the range 0-239. For example, a value of 0x03 specifies interrupt IRQ3.
@{*/
/**@}*/


/**@}*/

/** @defgroup scb_mvfr0 MVFR0 Media and VFP Feature Register 0
@{*/


/**@}*/

/** @defgroup scb_mvfr1 MVFR1 Media and VFP Feature Register 1
@{*/


/**@}*/

/** @defgroup scb_mvfr2 MVFR2 Media and VFP Feature Register 2
@{*/


/**@}*/
